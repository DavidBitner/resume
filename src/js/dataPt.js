const projects = {
  project1: {
    title: "30 projects",
    subtitle:
      "Um grande projecto envolvendo multiplos conceitos e teconologias.",
    icon: "30projectsIcon.png",
    highlights: ["API's", "Custom Canvas", "JavaScript modules"],
    imgs: [
      "30projects1.png",
      "30projects2.png",
      "30projects3.png",
      "30projects4.png",
      "30projects5.png",
      "30projects6.png",
      "30projects7.png",
      "30projects8.png",
      "30projects9.png",
      "30projects10.png",
      "30projects11.png",
      "30projects12.png",
      "30projects13.png",
    ],
    text: "Um projeto feito para testar e demontrar várias skills. Conceitos como custom canvas na homepage para criar um efeito matrix, consumo de diferentes api's, css, scss, um pouco de bootstrap e muitas diferentes aplicações de JavaScript.",
    link: "https://davidbitner.github.io/30-projects/",
  },
  project2: {
    title: "Landings Page",
    subtitle: "Uma landing page.",
    icon: "landingsPageIcon.png",
    highlights: [
      "Landing Page",
      "Splide Carousel",
      "Ken Burns Effect",
      "Modal",
    ],
    imgs: [
      "landingsPage1.png",
      "landingsPage2.png",
      "landingsPage3.png",
      "landingsPage4.png",
      "landingsPage5.png",
      "landingsPage6.png",
    ],
    text: "Uma landing page feita usando alguns conceitos agile de desenvolvimento de software como sprints, um mapa mental, diagrama de classe entre outros. Animações de bezier complexas para criar um efeito cinematografico no main banner, multiplas animações de transição, modais, tudo usando BEM naming pattern.",
    link: "https://davidbitner.github.io/landings-page/",
  },
  project3: {
    title: "Auto Blog",
    subtitle: "Um blog que gera posts automaticamente.",
    icon: "autoBlogIcon.png",
    highlights: ["Blog", "API", "Loading info"],
    imgs: ["autoBlog1.png", "autoBlog2.png", "autoBlog3.png"],
    text: "Este é um website que usa a api newscather para gerar noticias baseadas em um tópico, com a informação gerada pela api um post é automaticamente criado. O site é 100% responsivo. Botões tem um ripple effect criado em CSS e JS. O site também possue uma feature de loading para os posts que funciona enquanto as informações e o post em si são gerados no background.",
    link: "https://davidbitner.github.io/auto-blog/",
  },
  project4: {
    title: "Crud",
    subtitle: "Um website crud criado usando classes JavaScript.",
    icon: "crudIcon.png",
    highlights: ["JS Classes", "CRUD"],
    imgs: ["crud1.png", "crud2.png", "crud3.png"],
    text: "Uma aplicação com cards, estes cards podem ser visualizados, criados, atualizados e deletados. As informações dentro de um card também podem ser manipuladas. A aplicação tem um layout grid e é 100% responsiva. Um modal é aberto toda vez que um card é criado, alterado ou deletado. Local storage é usado para que nenhuma informação seja perdida quando a aplicação for fechada.",
    link: "https://github.com/DavidBitner/crud/",
  },
  project5: {
    title: "Shapes Colors",
    subtitle:
      "Um website criado especificamente para aprender a como manipular containeres, posições do mouse e eventos que tem como gatilho o teclado.",
    icon: "shapesColorsIcon.png",
    highlights: ["Mouse Position", "Keyboard Options"],
    imgs: [
      "shapesColors1.png",
      "shapesColors2.png",
      "shapesColors3.png",
      "shapesColors4.png",
      "shapesColors5.png",
    ],
    text: "Website com manipulação de container baseado na posição do mouse e um conjunto de opções. Opções podem ser alteradas através de key presses que são manipuladas em JavaScript. Opções incluem mudar o background da aplicação, o formato do container, a cor do container e mudar o tamanho do container.",
    link: "https://davidbitner.github.io/shapes-colors/",
  },
  project6: {
    title: "Timers",
    subtitle: "Uma aplicação com multiplos timers.",
    icon: "timersIcon.png",
    highlights: ["Set Interval", "Modal", "Grid Responsivenes"],
    imgs: ["timers1.png", "timers2.png", "timers3.png"],
    text: "Multiplos timers em um grid responsivo. Timers podem ser adicionados, removidos, resetados e mudados com base em opções disponiveis dentro de um modal. Timers também possuem uma barra de progresso que muda com base em quanto tempo falta para o timer acabar. Timers também fazem um som ao terminar.",
    link: "https://davidbitner.github.io/timers/",
  },
};

export { projects };
